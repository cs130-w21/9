[{"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/index.js":"1","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/App.js":"2","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/history.js":"3","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CoursePage.js":"4","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CreateAndEdit.js":"5","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CourseList.js":"6","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CourseListModel.js":"7","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/ModuleCard.js":"8","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CoursePageModel.js":"9","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/createEditCourseModel.js":"10"},{"size":329,"mtime":1613067839283,"results":"11","hashOfConfig":"12"},{"size":1718,"mtime":1614314144762,"results":"13","hashOfConfig":"12"},{"size":84,"mtime":1613067839282,"results":"14","hashOfConfig":"12"},{"size":6578,"mtime":1614973885883,"results":"15","hashOfConfig":"12"},{"size":9983,"mtime":1614973975269,"results":"16","hashOfConfig":"12"},{"size":5160,"mtime":1614964837756,"results":"17","hashOfConfig":"12"},{"size":447,"mtime":1614201284329,"results":"18","hashOfConfig":"12"},{"size":1926,"mtime":1614200480063,"results":"19","hashOfConfig":"12"},{"size":695,"mtime":1614314144764,"results":"20","hashOfConfig":"12"},{"size":2244,"mtime":1614964837757,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"navqzf",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/index.js",[],["47","48"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/App.js",["49","50","51","52"],"import React, { Component } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\n\nimport CourseList from \"./Components/CourseList.js\";\nimport CoursePage from \"./Components/CoursePage.js\";\nimport history from \"./history.js\";\nimport CreateAndEdit from \"./Components/CreateAndEdit.js\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { shadows } from \"@material-ui/system\";\n\nexport default class Routes extends Component {\n  render() {\n    return (\n      <>\n        <AppBar\n          position=\"static\"\n          style={{\n            background:\n              \"linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%)\",\n          }}\n        >\n          <Toolbar>\n            <Typography style={{ margin: 5, color: \"black\" }} variant=\"h2\">\n              <a\n                style={{\n                  textDecoration: \"none\",\n                  textEmphasisColor: \"black\",\n                  textDecorationColor: \"black\",\n                  color: \"black\",\n                }}\n                href={\"/\"}\n              >\n                OpenCourse\n              </a>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={CourseList} />\n            <Route path=\"/CoursePage\" component={CoursePage} />\n            <Route path=\"/createEdit\" component={CreateAndEdit} />\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/history.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CoursePage.js",["53","54"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CreateAndEdit.js",["55","56","57","58","59","60","61","62","63","64","65"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CourseList.js",["66"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport logo from \"../OpenCourse.svg\";\nimport history from \"../history.js\";\nimport CourseListModel from \"../Models/CourseListModel.js\";\nimport Box from '@material-ui/core/Box';\nimport CreateEditModel from \"../Models/createEditCourseModel.js\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        OpenCourse\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nfunction viewClicked(albumNum) {\n  history.push({\n    pathname: \"/CoursePage\",\n    state: { detail: albumNum },\n  });\n}\n\nfunction editClicked(albumNum) {\n  console.log(\"Clocked\")\n  history.push({\n    pathname: \"/createEdit\",\n    state: { detail: albumNum },\n  });\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    borderRadius: 15,\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst courseListModel = new CourseListModel();\nconst courseCreateModel = new CreateEditModel();\nexport default function CourseList() {\n  const classes = useStyles();\n  const [issues, setIssues] = useState([]);\n  const getIssues = async () => {\n    try {\n      const data = await courseListModel.getData();\n      setIssues(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function createCourse(courseId, courseAuthor, courseDate, courseDescription,\n    courseLength, courseName, courseBody) {\n      courseCreateModel.createCourse(courseId, courseAuthor, courseDate, courseDescription,\n        courseLength, courseName, courseBody)\n    }\n\n    function editCourse(courseId, courseBody) {\n        courseCreateModel.editCourse(courseId, courseBody)\n      }\n  useEffect(() => {\n    getIssues();\n  }, []);\n  return (\n    <React.Fragment>\n      <style>{\"body { background-color: gray; }\"}</style>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <img src={logo} alt=\"Logo\" />\n          </Container>\n          <Box textAlign='center'>\n            <Button variant='contained'\n            onClick={() => {\n              editCourse(\"100\",[{title: \"link2\", link: \"https://reddit.com\", description : \"test\"}])}}>\n              Add Course\n            </Button>\n          </Box>\n\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {issues.map((card) => (\n              <Grid item key={card.name} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={logo}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {card.name}\n                    </Typography>\n                    <Typography>{card.description}</Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => {\n                        return viewClicked(card.course_id)}}>\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\"\n                      onClick={() => {        \n                      return editClicked(card.course_id)}}>\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          CS130 Group 9\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CourseListModel.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/ModuleCard.js",["67","68","69","70","71","72","73","74","75"],"import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport default function ModuleCard(props) {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Avatar aria-label=\"moduleNumber\">{props.index + 1}</Avatar>}\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            onClick={() => props.openModal(props.index)}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.module.title}\n        // subheader=\"September 14, 2016\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.module.desc}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n        <FavoriteIcon />\n      </IconButton> */}\n        <IconButton aria-label=\"link\" href={props.module.link} target=\"_blank\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          style={{ marginLeft: \"auto\" }}\n          onClick={() => props.deleteModule(props.module.id)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CoursePageModel.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/createEditCourseModel.js",["76"],"import axios from 'axios';\n\nvar headers = {\n    'Content-Type': 'application/json'\n}\nclass CreateEditModel {\n    constructor() {\n      this.cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    }\n\n    createCourse = async (courseAuthor, courseDescription,\n        courseLength, courseName, courseBody) => {\n      try {\n          const randomId = Math.floor(Math.random() * 1000000000000000); \n          var today = new Date();\n          var dd = String(today.getDate()).padStart(2, '0');\n          var mm = String(today.getMonth() + 1).padStart(2, '0');\n          var yyyy = today.getFullYear();\n          today = mm + '/' + dd + '/' + yyyy;\n          const data = await axios.post(\n              \"http://localhost:4000/courses/create\", {\n                \"id\": randomId,\n                \"date_created\": today,\n                \"description\": courseDescription,\n                \"length\": courseLength,\n                \"author\": courseAuthor,\n                \"name\": courseName,\n                \"body\": courseBody,\n                \"course_id\": toString(randomId)\n        },{\"headers\" : headers}\n          );\n          console.log(data.data)\n            return data.data\n      } catch(e) {\n          console.log(e);\n      }\n  };\n\n  editCourse = async (courseId, courseBody) => {\n    var modules = []\n    var dataBody = {}\n    try {\n        const data = await axios.get(\n            `http://localhost:4000/courses/${courseId}`\n        );\n            modules = data.data.body\n            dataBody = data.data\n    } catch(e) {\n        console.log(e);\n    }\n  try {\n      console.log(modules)\n      for(var i = 0; i < modules.length; i++){\n          courseBody.push(modules[i])\n      }\n      const data = await axios.post(\n          \"http://localhost:4000/courses/create\", {\n            \"id\": parseInt(courseId),\n            \"date_created\": dataBody.date_created,\n            \"description\": dataBody.description,\n            \"length\": dataBody.length,\n            \"author\": dataBody.author,\n            \"name\": dataBody.name,\n            \"body\": courseBody,\n            \"course_id\": courseId\n    },{\"headers\" : headers}\n      );\n      console.log(dataBody)\n        return dataBody\n  } catch(e) {\n      console.log(e);\n  }\n};\n  }\n\n  export default CreateEditModel;\n ",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":11,"column":8,"nodeType":"83","messageId":"84","endLine":11,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":12,"column":8,"nodeType":"83","messageId":"84","endLine":12,"endColumn":18},{"ruleId":"81","severity":1,"message":"86","line":13,"column":8,"nodeType":"83","messageId":"84","endLine":13,"endColumn":16},{"ruleId":"81","severity":1,"message":"87","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":17},{"ruleId":"81","severity":1,"message":"88","line":106,"column":10,"nodeType":"83","messageId":"84","endLine":106,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":126,"column":6,"nodeType":"91","endLine":126,"endColumn":8,"suggestions":"92"},{"ruleId":"81","severity":1,"message":"93","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":12},{"ruleId":"81","severity":1,"message":"94","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":18},{"ruleId":"81","severity":1,"message":"95","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":19},{"ruleId":"81","severity":1,"message":"96","line":9,"column":8,"nodeType":"83","messageId":"84","endLine":9,"endColumn":19},{"ruleId":"81","severity":1,"message":"97","line":10,"column":8,"nodeType":"83","messageId":"84","endLine":10,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":11,"column":8,"nodeType":"83","messageId":"84","endLine":11,"endColumn":18},{"ruleId":"81","severity":1,"message":"98","line":13,"column":8,"nodeType":"83","messageId":"84","endLine":13,"endColumn":17},{"ruleId":"81","severity":1,"message":"99","line":14,"column":8,"nodeType":"83","messageId":"84","endLine":14,"endColumn":20},{"ruleId":"81","severity":1,"message":"100","line":16,"column":8,"nodeType":"83","messageId":"84","endLine":16,"endColumn":18},{"ruleId":"81","severity":1,"message":"101","line":23,"column":7,"nodeType":"83","messageId":"84","endLine":23,"endColumn":22},{"ruleId":"89","severity":1,"message":"102","line":69,"column":6,"nodeType":"91","endLine":69,"endColumn":8,"suggestions":"103"},{"ruleId":"81","severity":1,"message":"104","line":95,"column":12,"nodeType":"83","messageId":"84","endLine":95,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":11,"column":8,"nodeType":"83","messageId":"84","endLine":11,"endColumn":14},{"ruleId":"81","severity":1,"message":"105","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":15},{"ruleId":"81","severity":1,"message":"106","line":15,"column":17,"nodeType":"83","messageId":"84","endLine":15,"endColumn":25},{"ruleId":"81","severity":1,"message":"107","line":16,"column":10,"nodeType":"83","messageId":"84","endLine":16,"endColumn":14},{"ruleId":"81","severity":1,"message":"108","line":16,"column":16,"nodeType":"83","messageId":"84","endLine":16,"endColumn":23},{"ruleId":"81","severity":1,"message":"109","line":17,"column":10,"nodeType":"83","messageId":"84","endLine":17,"endColumn":14},{"ruleId":"81","severity":1,"message":"110","line":17,"column":16,"nodeType":"83","messageId":"84","endLine":17,"endColumn":23},{"ruleId":"81","severity":1,"message":"111","line":18,"column":10,"nodeType":"83","messageId":"84","endLine":18,"endColumn":19},{"ruleId":"81","severity":1,"message":"112","line":18,"column":21,"nodeType":"83","messageId":"84","endLine":18,"endColumn":33},{"ruleId":"81","severity":1,"message":"113","line":56,"column":13,"nodeType":"83","messageId":"84","endLine":56,"endColumn":17},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'shadows' is defined but never used.","'author' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'courseId' and 'getmodules'. Either include them or remove the dependency array.","ArrayExpression",["116"],"'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'createEditModel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCourse'. Either include it or remove the dependency array.",["117"],"'createCourse' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'desc' is assigned a value but never used.","'setDesc' is assigned a value but never used.","'link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'isEditing' is assigned a value but never used.","'setIsEditing' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [courseId, getmodules]",{"range":"122","text":"123"},"Update the dependencies array to be: [getCourse]",{"range":"124","text":"125"},[3241,3243],"[courseId, getmodules]",[2278,2280],"[getCourse]"]
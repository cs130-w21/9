[{"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/index.js":"1","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/App.js":"2","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/history.js":"3","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CreateAndEdit.js":"4","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CourseList.js":"5","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CoursePage.js":"6","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/login.js":"7","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CoursePageModel.js":"8","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CourseListModel.js":"9","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/createEditCourseModel.js":"10","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/ModuleCard.js":"11","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/fire.js":"12","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/LoginComponent.js":"13"},{"size":329,"mtime":1613067839283,"results":"14","hashOfConfig":"15"},{"size":1755,"mtime":1615171941995,"results":"16","hashOfConfig":"15"},{"size":84,"mtime":1613067839282,"results":"17","hashOfConfig":"15"},{"size":11932,"mtime":1615171941997,"results":"18","hashOfConfig":"15"},{"size":5425,"mtime":1615170439455,"results":"19","hashOfConfig":"15"},{"size":6713,"mtime":1615171941997,"results":"20","hashOfConfig":"15"},{"size":2800,"mtime":1615171036133,"results":"21","hashOfConfig":"15"},{"size":695,"mtime":1614314144764,"results":"22","hashOfConfig":"15"},{"size":447,"mtime":1614201284329,"results":"23","hashOfConfig":"15"},{"size":2154,"mtime":1615170439456,"results":"24","hashOfConfig":"15"},{"size":1933,"mtime":1615170439456,"results":"25","hashOfConfig":"15"},{"size":418,"mtime":1615170439456,"results":"26","hashOfConfig":"15"},{"size":2004,"mtime":1615171679264,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"navqzf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/index.js",[],["57","58"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/App.js",["59","60","61","62","63"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/history.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CreateAndEdit.js",["64","65","66","67","68","69","70","71","72","73","74","75","76"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport history from \"../history.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ModuleCard from \"./ModuleCard\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CoursePageModel from \"../Models/CoursePageModel.js\";\nimport createEditCourseModel from \"../Models/createEditCourseModel.js\";\n\nconst coursePageModel = new CoursePageModel();\nconst createEditModel = new createEditCourseModel();\n\nexport default function CreateAndEdit() {\n\n  const classes = useStyles();\n  const location = useLocation();\n  const courseId = location.state ? location.state.detail : undefined; //undefined if creating course\n  const [editing, setEditing] = useState(!(location.state === undefined));\n  const [title, setTitle] = useState();\n  const [desc, setDesc] = useState(\"\");\n  const [author, setAuthor] = useState();\n  const [modules, setModules] = useState([]);\n\n  const getCourse = async () => {\n    try {\n      const data = await coursePageModel.getData(courseId);\n      console.log(data);\n      if (data.body !== undefined) {\n        setModules(data.body);\n      }\n      if (data.description !== undefined) {\n        setDesc(data.description);\n      }\n      if (data.name !== undefined) {\n        setTitle(data.name);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const [open, setOpen] = useState(false);\n  const [currModule, setCurrModule] = useState({\n    id: undefined,\n    title: \"\",\n    description: \"\",\n    link: \"\",\n  });\n  const [currModuleIndex, setCurrModuleIndex] = useState(0);\n\n  useEffect(() => {\n    console.log(\"editing:\", editing);\n    if (editing) {\n      getCourse();\n    }\n  }, []);\n  /*\nFunction for adding/creating a course. Must fill in all parameters.\nCreate the courseEdit model first like this\nconst courseListModel = new CourseListModel();\n\nYou then call the function as courseListMode.createCourse(fill in all parameters)\ncourseAuthor = string\ncourseDescription = string\ncourseLength = string\ncourseName = string\ncourseBody = array of objects with following type {title: \"link2\", link: \"https://reddit.com\", description : \"test\"}, be sure that this\nis an array, as the model will append the existing entries into this array and then this array will be sent in post request. \n\nExample call createCourse(\"1 minute\", \"Abstract\", [{title: \"link2\", link: \"https://reddit.com\", description : \"test\"}])\n\n  function createCourse(courseId, courseAuthor, courseDate, courseDescription,\n    courseLength, courseName, courseBody) {\n      courseCreateModel.createCourse(courseId, courseAuthor, courseDate, courseDescription,\n        courseLength, courseName, courseBody)\n    }\n\n\n  ****** To Edit a course *****\nCourseId is needed as well as a body to edit a course. You can also change the name and description\n\ncourseID = int ** required\ncourseDescription = string ** optional\ncourseLength = string ** optional\ncourseName = string ** required\ncourseBody = array of objects with following type {title: \"link2\", link: \"https://reddit.com\", description : \"test\"}, be sure that this\nis an array, as the model will append the existing entries into this array and then this array will be sent in post request. ** required\n\nExample call createCourse(\"yaboi\", \"id\", \"1 minute\", \"Abstract\", [{title: \"link2\", link: \"https://reddit.com\", description : \"test\"}])\n\n  function createCourse(courseId, courseAuthor, courseDate, courseDescription,\n    courseLength, courseName, courseBody) {\n      courseCreateModel.createCourse(courseId, courseAuthor, courseDate, courseDescription,\n        courseLength, courseName, courseBody)\n    }\n*/\n\n  const createCourse = () => {\n    if (!title) {\n      alert(\"You must add a course title!\");\n    } else if (modules.length == 0) {\n      alert(\"You must add course modules\");\n    } else {\n      try {\n        createEditModel.createCourse(author, desc, \"\", title, modules);\n        history.push({\n          pathname: \"/\",\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    //route back to home\n  };\n\n  const saveEdits = () => {\n    if (modules.length == 0) {\n      alert(\"You must add course modules\");\n    } else {\n      try {\n        createEditModel.editCourse(courseId, modules);\n        history.push({\n          pathname: \"/\",\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    //route back to home\n  };\n\n  const handleModuleTitleChange = (e) => {\n    setCurrModule({ ...currModule, title: e.target.value });\n  };\n\n  const handleModuleDescChange = (e) => {\n    setCurrModule({ ...currModule, description: e.target.value });\n  };\n  const handleModuleLinkChange = (e) => {\n    setCurrModule({ ...currModule, link: e.target.value });\n  };\n\n  const handleOpen = (index) => {\n    const current = modules[index];\n    console.log(\"selected module\", current);\n    setCurrModule(current);\n    setCurrModuleIndex(index);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    const newModules = modules;\n    newModules[currModuleIndex] = currModule;\n    console.log(newModules);\n    setModules(newModules);\n    setOpen(false);\n  };\n\n  const newModule = () => {\n    const list = modules.concat({\n      id: modules.length + 1, //need to change this to the id in db.\n      title: \"\",\n      description: \"\",\n      link: \"\",\n    });\n\n    setModules(list);\n    \n  };\n\n  const deleteModule = (id) => {\n    console.log(\"deleting\", id);\n    const newList = modules.filter((item) => item.id !== id);\n\n    setModules(newList);\n  };\n\n  const modulesList = modules.map((module, index) => (\n    <Grid item key={index} className={classes.moduleCard}>\n      <ModuleCard\n        index={index}\n        module={module}\n        deleteModule={deleteModule}\n        openModal={handleOpen}\n      />\n    </Grid>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        height=\"100vh\"\n        className={classes.grid}\n        data-testid = \"addmoduleextension\"\n      >\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          height={\"100vh\"}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n\t  \n        >\n          <div className={classes.paper}>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Module Title\"\n              variant=\"outlined\"\n              defaultValue={currModule.title}\n              style={{ margin: \"1%\" }}\n              onChange={handleModuleTitleChange } \n\t      \n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Module Description\"\n              variant=\"outlined\"\n              defaultValue={currModule.description}\n              style={{ margin: \"1%\" }}\n              onChange={handleModuleDescChange}\n              multiline\n              rows={4}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Module Link\"\n              variant=\"outlined\"\n              defaultValue={currModule.link}\n              style={{ margin: \"1%\" }}\n              onChange={handleModuleLinkChange}\n            />\n          </div>\n        </Modal>\n        <Grid item className={classes.submitButton}>\n          {editing ? (\n            <Button\n              variant=\"contained\"\n              style={{\n                background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n                color: \"white\",\n                boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .4)\",\n              }}\n              onClick={saveEdits}\n            >\n              Save Changes\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              style={{\n                background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n                color: \"white\",\n                boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .4)\",\n              }}\n              onClick={createCourse}\n            >\n              Create Course\n            </Button>\n          )}\n        </Grid>\n        <Grid item style={{ width: \"90%\" }}>\n          <Typography variant=\"h4\">Course Title:</Typography>\n        </Grid>\n        <Grid item className={classes.gridItem}>\n          <TextField\n            className={classes.textInput}\n            id=\"outlined-basic\"\n            label=\"Course Title\"\n            variant=\"outlined\"\n            defaultValue={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Grid>\n        <Grid item style={{ width: \"90%\" }}>\n          <Typography variant=\"h6\">Course Author:</Typography>\n        </Grid>\n        <Grid item className={classes.gridItem} style={{ marginTop: \"1%\" }}>\n          <TextField\n            className={classes.textInput}\n            id=\"outlined-basic\"\n            label=\"Course Author\"\n            variant=\"outlined\"\n            defaultValue={author}\n            onChange={(e) => setAuthor(e.target.value)}\n          />\n        </Grid>\n        <Grid item style={{ width: \"90%\" }}>\n          <Typography variant=\"h6\">Course Description:</Typography>\n        </Grid>\n        <Grid item className={classes.gridItem} style={{ marginTop: \"1%\" }}>\n          <TextField\n            className={classes.textInput}\n            id=\"outlined-basic\"\n            label=\"Course Decription\"\n            variant=\"outlined\"\n            defaultValue={desc}\n            multiline\n            rows={4}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        </Grid>\n        <Grid item style={{ width: \"90%\" }}>\n          <Typography variant=\"h6\">Course Modules:</Typography>\n        </Grid>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          {modulesList}\n        </Grid>\n        <Grid item>\n          <Button\n            style={{\n              margin: 20,\n              // background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n              color: \"#2196F3\",\n              boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .4)\",\n            }}\n            onClick={newModule}\n            variant=\"outlined\"\n            color=\"primary\"\n            data-testid=\"addmodulebutton\"\n          >\n            Add Module\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    // flexDirection: \"column\",\n    //alignItems: \"center\",\n    // background: \"grey\",\n    // flex: 1,\n    flexGrow: 1,\n  },\n  grid: {\n    marginTop: \"5%\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  gridItem: { margin: \"3%\", width: \"90%\" },\n  submitButton: {\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n  },\n  moduleCard: { margin: 10, width: \"90%\" },\n  paper: {\n    border: \"2px solid #000\",\n    backgroundColor: theme.palette.background.paper,\n    minWidth: \"50%\",\n    boxShadow: theme.shadows[5],\n    padding: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  container: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    border: 0,\n    borderRadius: 3,\n  },\n}));\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CourseList.js",["77","78"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CoursePage.js",["79","80"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport logo from \"../OpenCourse.svg\";\nimport CoursePageModel from \"../Models/CoursePageModel.js\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"primary\" href=\"https://material-ui.com/\">\n        OpenCourse\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: \"#6D177D\",\n    padding: theme.spacing(1, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(6),\n  },\n  cardGrid: {\n    align: \"center\",\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(10),\n  },\n  card: {\n    height: \"120%\",\n    width: \"130%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"3e4551\",\n    backgroundColor: \"#CCC8CD\",\n    borderRadius: \"10px\",\n    borderBottom: \"1\",\n    borderTopColor: \"#2196F3\",\n    borderColor: \"#2196F3\",\n    variant: \"outlined\",\n    raised: false,\n    shadow: 1,\n    transform: \"translate(-5%, -5%)\",\n    backgroundSize: \"500%\",\n    boxShadow: \"0 3px 5px 2px rgba(20, 10, 15, .3)\",\n    transition: \"0.6s\",\n    backgroundImage: \"linear-gradient(45deg, #CCC8CD, #CCC8CD, #3e4551)\",\n    \"&:hover\": {\n      backgroundPosition: \"right\",\n      raised: true,\n      shadow: 3,\n      transform: \"scale3d(1.05, 1.05, 1)\",\n    },\n  },\n  newcard: {\n    height: \"100%\",\n    width: \"20%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    color: \"#6D177D\",\n  },\n\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: \"white\", //theme.palette.background.paper,\n    padding: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n}));\n\nconst coursePageModel = new CoursePageModel();\n\nexport default function CoursePage() {\n  const location = useLocation();\n  const courseId = location.state.detail;\n  const classes = useStyles();\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [modules, setModules] = useState([]);\n  const getmodules = async () => {\n    try {\n      const data = await coursePageModel.getData(courseId);\n      if (data.author !== undefined) {\n        setAuthor(data.author);\n      }\n      if (data.body !== undefined) {\n        setModules(data.body);\n      }\n      if (data.description !== undefined) {\n        setDescription(data.description);\n      }\n\n      if (data.name !== undefined) {\n        setTitle(data.name);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getmodules();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <style>{\"body { background-color:  #F0EEF1; }\"}</style>\n      <main>\n        <div className={classes.root} variant=\"outlined\"></div>\n\n        <img\n          src={logo}\n          alt=\"Logo\"\n          width=\"140\"\n          height=\"130\"\n          style={{ float: \"left\" }}\n        />\n        <h1\n          style={{\n            textAlign: \"center\",\n            fontFamily: \"Times New Roman\",\n            fontSize: 50,\n            fontStyle: \"normal\",\n            minHeight: \"1px\",\n            color: \"#3e4551\",\n          }}\n        >\n          {\" \"}\n          {title}\n        </h1>\n\n        {/* Hero unit */}\n        <div className={classes.cardContent}>\n          <Container maxWidth=\"xl\">\n            <div></div>\n          </Container>\n          <div>\n            <h5\n              style={{\n                textAlign: \"center\",\n                fontFamily: \"Times New Roman\",\n                fontSize: 20,\n                fontStyle: \"normal\",\n                minHeight: \"1px\",\n                color: \"#3e4551\",\n              }}\n            >\n              Course Description {description}\n            </h5>\n          </div>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n\n          <Grid container spacing={9}>\n            {modules.length > 0 ? (\n              modules.map((card) => (\n                <Grid item key={card} xs={1} sm={4} md={9}>\n                  <Card className={classes.card}>\n                    <CardHeader\n                      title={card.title}\n                      // subheader=\"September 14, 2016\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h3\" component=\"h3\">\n                        {card.id}\n                      </Typography>\n                      <Typography>{card.description}</Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button\n                        href={card.link}\n                        target=\"_blank\"\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        style={{\n                          marginLeft: \"auto\",\n                          backgroundColor: \"#2196F3\",\n                          borderRadius: \"5px\",\n                          color: \"white\",\n                        }}\n                      >\n                        Learn\n                      </Button>\n                      {/*<Button variant = \"outlined\" size=\"medium\" style ={{backgroundColor: '#f10849', borderRadius: '5px', color: 'white'}}>\n                        Completed\n                      </Button> */}\n                    </CardActions>\n                  </Card>\n                </Grid>\n\n              ))\n            ) : (\n              <Typography>No modules for this course</Typography>\n            )}\n          </Grid>\n        </Container>\n      </main>\n\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          CS130 Group 9\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n\n  );\n}\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/login.js",["81","82","83","84"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CoursePageModel.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CourseListModel.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/createEditCourseModel.js",["85"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/ModuleCard.js",["86","87","88","89","90","91","92","93","94"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/fire.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/LoginComponent.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":18},{"ruleId":"99","severity":1,"message":"103","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":18},{"ruleId":"99","severity":1,"message":"105","line":13,"column":8,"nodeType":"101","messageId":"102","endLine":13,"endColumn":16},{"ruleId":"99","severity":1,"message":"106","line":14,"column":10,"nodeType":"101","messageId":"102","endLine":14,"endColumn":17},{"ruleId":"99","severity":1,"message":"107","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":12},{"ruleId":"99","severity":1,"message":"108","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":18},{"ruleId":"99","severity":1,"message":"109","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":19},{"ruleId":"99","severity":1,"message":"110","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":19},{"ruleId":"99","severity":1,"message":"111","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":18},{"ruleId":"99","severity":1,"message":"112","line":14,"column":8,"nodeType":"101","messageId":"102","endLine":14,"endColumn":17},{"ruleId":"99","severity":1,"message":"113","line":15,"column":8,"nodeType":"101","messageId":"102","endLine":15,"endColumn":20},{"ruleId":"99","severity":1,"message":"114","line":17,"column":8,"nodeType":"101","messageId":"102","endLine":17,"endColumn":18},{"ruleId":"99","severity":1,"message":"115","line":30,"column":19,"nodeType":"101","messageId":"102","endLine":30,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":68,"column":6,"nodeType":"118","endLine":68,"endColumn":8,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":113,"column":31,"nodeType":"122","messageId":"123","endLine":113,"endColumn":33},{"ruleId":"120","severity":1,"message":"121","line":129,"column":24,"nodeType":"122","messageId":"123","endLine":129,"endColumn":26},{"ruleId":"99","severity":1,"message":"124","line":100,"column":12,"nodeType":"101","messageId":"102","endLine":100,"endColumn":24},{"ruleId":"99","severity":1,"message":"125","line":120,"column":12,"nodeType":"101","messageId":"102","endLine":120,"endColumn":22},{"ruleId":"99","severity":1,"message":"126","line":106,"column":10,"nodeType":"101","messageId":"102","endLine":106,"endColumn":16},{"ruleId":"116","severity":1,"message":"127","line":132,"column":6,"nodeType":"118","endLine":132,"endColumn":8,"suggestions":"128"},{"ruleId":"99","severity":1,"message":"129","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":29,"column":9,"nodeType":"132","messageId":"133","endLine":38,"endColumn":10},{"ruleId":"130","severity":1,"message":"131","line":47,"column":9,"nodeType":"132","messageId":"133","endLine":55,"endColumn":10},{"ruleId":"116","severity":1,"message":"134","line":77,"column":6,"nodeType":"118","endLine":77,"endColumn":8,"suggestions":"135"},{"ruleId":"99","severity":1,"message":"136","line":57,"column":13,"nodeType":"101","messageId":"102","endLine":57,"endColumn":17},{"ruleId":"99","severity":1,"message":"103","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":14},{"ruleId":"99","severity":1,"message":"137","line":15,"column":10,"nodeType":"101","messageId":"102","endLine":15,"endColumn":15},{"ruleId":"99","severity":1,"message":"138","line":15,"column":17,"nodeType":"101","messageId":"102","endLine":15,"endColumn":25},{"ruleId":"99","severity":1,"message":"139","line":16,"column":10,"nodeType":"101","messageId":"102","endLine":16,"endColumn":14},{"ruleId":"99","severity":1,"message":"140","line":16,"column":16,"nodeType":"101","messageId":"102","endLine":16,"endColumn":23},{"ruleId":"99","severity":1,"message":"141","line":17,"column":10,"nodeType":"101","messageId":"102","endLine":17,"endColumn":14},{"ruleId":"99","severity":1,"message":"142","line":17,"column":16,"nodeType":"101","messageId":"102","endLine":17,"endColumn":23},{"ruleId":"99","severity":1,"message":"143","line":18,"column":10,"nodeType":"101","messageId":"102","endLine":18,"endColumn":19},{"ruleId":"99","severity":1,"message":"144","line":18,"column":21,"nodeType":"101","messageId":"102","endLine":18,"endColumn":33},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'CourseList' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'shadows' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'setEditing' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'editing' and 'getCourse'. Either include them or remove the dependency array.","ArrayExpression",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createCourse' is defined but never used.","'editCourse' is defined but never used.","'author' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getmodules'. Either include it or remove the dependency array.",["148"],"'Container' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.",["149"],"'data' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'desc' is assigned a value but never used.","'setDesc' is assigned a value but never used.","'link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'isEditing' is assigned a value but never used.","'setIsEditing' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [editing, getCourse]",{"range":"156","text":"157"},"Update the dependencies array to be: [getmodules]",{"range":"158","text":"159"},"Update the dependencies array to be: [authListener]",{"range":"160","text":"161"},[2387,2389],"[editing, getCourse]",[3373,3375],"[getmodules]",[1986,1988],"[authListener]"]
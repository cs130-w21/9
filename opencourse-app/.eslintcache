[{"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/index.js":"1","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/App.js":"2","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/history.js":"3","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CreateAndEdit.js":"4","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CourseList.js":"5","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CoursePage.js":"6","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CourseListModel.js":"7","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/ModuleCard.js":"8","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CoursePageModel.js":"9"},{"size":329,"mtime":1613067839283,"results":"10","hashOfConfig":"11"},{"size":1718,"mtime":1614314144762,"results":"12","hashOfConfig":"11"},{"size":84,"mtime":1613067839282,"results":"13","hashOfConfig":"11"},{"size":7182,"mtime":1614314144764,"results":"14","hashOfConfig":"11"},{"size":4192,"mtime":1614314144762,"results":"15","hashOfConfig":"11"},{"size":11013,"mtime":1614385548135,"results":"16","hashOfConfig":"11"},{"size":447,"mtime":1614201284329,"results":"17","hashOfConfig":"11"},{"size":1926,"mtime":1614200480063,"results":"18","hashOfConfig":"11"},{"size":695,"mtime":1614314144764,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"navqzf",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/index.js",[],["43","44"],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/App.js",["45","46","47","48"],"import React, { Component } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\n\nimport CourseList from \"./Components/CourseList.js\";\nimport CoursePage from \"./Components/CoursePage.js\";\nimport history from \"./history.js\";\nimport CreateAndEdit from \"./Components/CreateAndEdit.js\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { shadows } from \"@material-ui/system\";\n\nexport default class Routes extends Component {\n  render() {\n    return (\n      <>\n        <AppBar\n          position=\"static\"\n          style={{\n            background:\n              \"linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(253,187,45,1) 100%)\",\n          }}\n        >\n          <Toolbar>\n            <Typography style={{ margin: 5, color: \"black\" }} variant=\"h2\">\n              <a\n                style={{\n                  textDecoration: \"none\",\n                  textEmphasisColor: \"black\",\n                  textDecorationColor: \"black\",\n                  color: \"black\",\n                }}\n                href={\"/\"}\n              >\n                OpenCourse\n              </a>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Router history={history}>\n          <Switch>\n            <Route path=\"/\" exact component={CourseList} />\n            <Route path=\"/CoursePage\" component={CoursePage} />\n            <Route path=\"/createEdit\" component={CreateAndEdit} />\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/history.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CreateAndEdit.js",["49","50","51","52","53","54","55","56","57"],"import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ModuleCard from \"./ModuleCard\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function CreateAndEdit() {\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [modules, setModules] = useState([\n    {\n      id: 1,\n      title: \"first modulee\",\n      desc: \"this is the first module\",\n      link: \"https://pictureofahotdog.com/\",\n    },\n  ]);\n\n  const [open, setOpen] = useState(false);\n  const [currModule, setCurrModule] = useState({\n    id: undefined,\n    title: \"\",\n    desc: \"\",\n    link: \"\",\n  });\n  const [currModuleIndex, setCurrModuleIndex] = useState(0);\n\n  const handleModuleTitleChange = (e) => {\n    setCurrModule({ ...currModule, title: e.target.value });\n  };\n\n  const handleModuleDescChange = (e) => {\n    setCurrModule({ ...currModule, desc: e.target.value });\n  };\n  const handleModuleLinkChange = (e) => {\n    setCurrModule({ ...currModule, link: e.target.value });\n  };\n\n  const handleOpen = (index) => {\n    const current = modules[index];\n    console.log(\"selected module\", current);\n    setCurrModule(current);\n    setCurrModuleIndex(index);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    const newModules = modules;\n    newModules[currModuleIndex] = currModule;\n    console.log(newModules);\n    setModules(newModules);\n    setOpen(false);\n  };\n\n  const newModule = () => {\n    const list = modules.concat({\n      id: modules.length + 1, //need to change this to the id in db.\n      title: \"\",\n      desc: \"\",\n      link: \"\",\n    });\n\n    setModules(list);\n  };\n\n  const deleteModule = (id) => {\n    console.log(\"deleting\", id);\n    const newList = modules.filter((item) => item.id !== id);\n\n    setModules(newList);\n  };\n\n  const modulesList = modules.map((module, index) => (\n    <Grid item key={index} className={classes.moduleCard}>\n      <ModuleCard\n        index={index}\n        module={module}\n        deleteModule={deleteModule}\n        openModal={handleOpen}\n      />\n    </Grid>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        height=\"100vh\"\n        className={classes.grid}\n      >\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          height={\"100vh\"}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div className={classes.paper}>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Module Title\"\n              variant=\"outlined\"\n              defaultValue={currModule.title}\n              style={{ margin: \"1%\" }}\n              onChange={handleModuleTitleChange}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Module Description\"\n              variant=\"outlined\"\n              defaultValue={currModule.desc}\n              style={{ margin: \"1%\" }}\n              onChange={handleModuleDescChange}\n              multiline\n              rows={4}\n            />\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Module Link\"\n              variant=\"outlined\"\n              defaultValue={currModule.link}\n              style={{ margin: \"1%\" }}\n              onChange={handleModuleLinkChange}\n            />\n          </div>\n        </Modal>\n        <Grid item className={classes.submitButton}>\n          <Button\n            variant=\"contained\"\n            style={{\n              background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n              color: \"white\",\n              boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .4)\",\n            }}\n          >\n            Save Changes\n          </Button>\n        </Grid>\n        <Grid item style={{ width: \"90%\" }}>\n          <Typography variant=\"h4\">Course Title:</Typography>\n        </Grid>\n        <Grid item className={classes.gridItem}>\n          <TextField\n            className={classes.textInput}\n            id=\"outlined-basic\"\n            label=\"Course Title\"\n            variant=\"outlined\"\n            defaultValue={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Grid>\n        <Grid item style={{ width: \"90%\" }}>\n          <Typography variant=\"h6\">Course Description:</Typography>\n        </Grid>\n        <Grid item className={classes.gridItem} style={{ marginTop: \"1%\" }}>\n          <TextField\n            className={classes.textInput}\n            id=\"outlined-basic\"\n            label=\"Course Decription\"\n            variant=\"outlined\"\n            defaultValue={desc}\n            multiline\n            rows={4}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        </Grid>\n        <Grid item style={{ width: \"90%\" }}>\n          <Typography variant=\"h6\">Course Modules:</Typography>\n        </Grid>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          {modulesList}\n        </Grid>\n        <Grid item>\n          <Button\n            style={{\n              margin: 20,\n              // background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\n              color: \"#2196F3\",\n              boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .4)\",\n            }}\n            onClick={newModule}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Add Module\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    // flexDirection: \"column\",\n    //alignItems: \"center\",\n    // background: \"grey\",\n    // flex: 1,\n    flexGrow: 1,\n  },\n  grid: {\n    marginTop: \"5%\",\n  },\n  textInput: {\n    width: \"100%\",\n  },\n  gridItem: { margin: \"3%\", width: \"90%\" },\n  submitButton: {\n    width: \"90%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n  },\n  moduleCard: { margin: 10, width: \"90%\" },\n  paper: {\n    border: \"2px solid #000\",\n    backgroundColor: theme.palette.background.paper,\n    minWidth: \"50%\",\n    boxShadow: theme.shadows[5],\n    padding: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  container: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    border: 0,\n    borderRadius: 3,\n  },\n}));\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CourseList.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/CoursePage.js",["58","59","60","61","62","63","64","65","66","67","68","69"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport logo from \"../OpenCourse.svg\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { borders } from \"@material-ui/system\";\nimport CoursePageModel from \"../Models/CoursePageModel.js\";\nimport clsx from \"clsx\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nconst drawerWidth = 220;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"primary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"primary\" href=\"https://material-ui.com/\">\n        OpenCourse\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: \"#6D177D\",\n    padding: theme.spacing(1, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(6),\n  },\n  cardGrid: {\n    align: \"center\",\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(10),\n  },\n  card: {\n    height: \"120%\",\n    width: \"130%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"3e4551\",\n    backgroundColor: \"#CCC8CD\",\n    borderRadius: \"10px\",\n    borderBottom: \"1\",\n    borderTopColor: \"#2196F3\",\n    borderColor: \"#2196F3\",\n    variant: \"outlined\",\n    raised: false,\n    shadow: 1,\n    transform: \"translate(-5%, -5%)\",\n    backgroundSize: \"500%\",\n    boxShadow: \"0 3px 5px 2px rgba(20, 10, 15, .3)\",\n    transition: \"0.6s\",\n    backgroundImage: \"linear-gradient(45deg, #CCC8CD, #CCC8CD, #3e4551)\",\n    \"&:hover\": {\n      backgroundPosition: \"right\",\n      raised: true,\n      shadow: 3,\n      transform: \"scale3d(1.05, 1.05, 1)\",\n    },\n  },\n  newcard: {\n    height: \"100%\",\n    width: \"20%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    color: \"#6D177D\",\n  },\n\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: \"white\", //theme.palette.background.paper,\n    padding: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n}));\n\nconst card1 = [1];\n\nconst coursePageModel = new CoursePageModel();\n\nexport default function CoursePage() {\n  const location = useLocation();\n  const courseId = location.state.detail;\n  const classes = useStyles();\n  const [author, setAuthor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [modules, setModules] = useState([]);\n  const getmodules = async () => {\n    try {\n      const data = await coursePageModel.getData(courseId);\n      if (data.author !== undefined) {\n        setAuthor(data.author);\n      }\n      if (data.body !== undefined) {\n        setModules(data.body);\n      }\n      if (data.description !== undefined) {\n        setDescription(data.description);\n      }\n      if (data.name !== undefined) {\n        setTitle(data.name);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getmodules();\n  }, []);\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Home\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <HomeIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    // <div>course page {location.state.detail}</div>\n    <React.Fragment>\n      <style>{\"body { background-color:  #F0EEF1; }\"}</style>\n      <main>\n        <div className={classes.root} variant=\"outlined\">\n          <div>\n            {[\" \"].map((anchor) => (\n              <React.Fragment key={anchor}>\n                <AppBar position=\"sticky\" style={{ backgroundColor: \"white\" }}>\n                  <Toolbar>\n                    <IconButton\n                      edge=\"start\"\n                      className={classes.menuButton}\n                      style={{ color: \"#2196F3\" }}\n                      aria-label=\"menu\"\n                      onClick={toggleDrawer(anchor, true)}\n                    >\n                      {anchor}\n                      <MenuIcon />\n                    </IconButton>\n                    <Typography\n                      variant=\"h4\"\n                      className={classes.title}\n                      style={{ color: \"#3e4551\" }}\n                    >\n                      OpenCourse\n                    </Typography>\n                    <Button style={{ color: \"#2196F3\" }}>Login</Button>\n                  </Toolbar>\n                </AppBar>\n\n                <IconButton\n                  edge=\"end\"\n                  className={classes.menuButton}\n                  style={{ color: \"#2196F3\" }}\n                  aria-label=\"menu\"\n                  onClick={toggleDrawer(anchor, true)}\n                >\n                  {anchor}\n                </IconButton>\n\n                <Drawer\n                  anchor={anchor}\n                  open={state[anchor]}\n                  onClose={toggleDrawer(anchor, false)}\n                >\n                  {list(anchor)}\n                </Drawer>\n              </React.Fragment>\n            ))}\n          </div>\n        </div>\n\n        <img\n          src={logo}\n          alt=\"Logo\"\n          width=\"140\"\n          height=\"130\"\n          style={{ float: \"left\" }}\n        />\n        <h1\n          style={{\n            textAlign: \"center\",\n            fontFamily: \"Times New Roman\",\n            fontSize: 50,\n            fontStyle: \"normal\",\n            minHeight: \"1px\",\n            color: \"#3e4551\",\n          }}\n        >\n          {\" \"}\n          {title}\n        </h1>\n\n        {/* Hero unit */}\n        <div className={classes.cardContent}>\n          <Container maxWidth=\"xl\">\n            <div></div>\n          </Container>\n          <div>\n            <h5\n              style={{\n                textAlign: \"center\",\n                fontFamily: \"Times New Roman\",\n                fontSize: 20,\n                fontStyle: \"normal\",\n                minHeight: \"1px\",\n                color: \"#3e4551\",\n              }}\n            >\n              Course Description {description}\n            </h5>\n          </div>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n\n          <Grid container spacing={9}>\n            {modules.length > 0 ? (\n              modules.map((card) => (\n                <Grid item key={card} xs={1} sm={4} md={9}>\n                  <Card className={classes.card}>\n                    <CardHeader\n                      title={card.title}\n                      // subheader=\"September 14, 2016\"\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h3\" component=\"h3\">\n                        {card.id}\n                      </Typography>\n                      <Typography>{card.description}</Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button\n                        href={card.link}\n                        target=\"_blank\"\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        style={{\n                          marginLeft: \"auto\",\n                          backgroundColor: \"#2196F3\",\n                          borderRadius: \"5px\",\n                          color: \"white\",\n                        }}\n                      >\n                        Learn\n                      </Button>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        style={{\n                          backgroundColor: \"#f10849\",\n                          borderRadius: \"5px\",\n                          color: \"white\",\n                        }}\n                      >\n                        Completed\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))\n            ) : (\n              <Typography>No modules for this course</Typography>\n            )}\n          </Grid>\n        </Container>\n      </main>\n\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          CS130 Group 9\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CourseListModel.js",[],"/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Components/ModuleCard.js",["70","71","72","73","74","75","76","77","78"],"import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport default function ModuleCard(props) {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={<Avatar aria-label=\"moduleNumber\">{props.index + 1}</Avatar>}\n        action={\n          <IconButton\n            aria-label=\"settings\"\n            onClick={() => props.openModal(props.index)}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.module.title}\n        // subheader=\"September 14, 2016\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.module.desc}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        {/* <IconButton aria-label=\"add to favorites\">\n        <FavoriteIcon />\n      </IconButton> */}\n        <IconButton aria-label=\"link\" href={props.module.link} target=\"_blank\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"delete\"\n          style={{ marginLeft: \"auto\" }}\n          onClick={() => props.deleteModule(props.module.id)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n","/Users/dylanbreon/Documents/UCLA 20-21/cs130/9/opencourse-app/src/Models/CoursePageModel.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":14},{"ruleId":"83","severity":1,"message":"87","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":18},{"ruleId":"83","severity":1,"message":"88","line":13,"column":8,"nodeType":"85","messageId":"86","endLine":13,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":14,"column":10,"nodeType":"85","messageId":"86","endLine":14,"endColumn":17},{"ruleId":"83","severity":1,"message":"90","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":12},{"ruleId":"83","severity":1,"message":"91","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},{"ruleId":"83","severity":1,"message":"92","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":19},{"ruleId":"83","severity":1,"message":"93","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":19},{"ruleId":"83","severity":1,"message":"94","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":14},{"ruleId":"83","severity":1,"message":"87","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":18},{"ruleId":"83","severity":1,"message":"95","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":17},{"ruleId":"83","severity":1,"message":"96","line":13,"column":8,"nodeType":"85","messageId":"86","endLine":13,"endColumn":20},{"ruleId":"83","severity":1,"message":"97","line":15,"column":8,"nodeType":"85","messageId":"86","endLine":15,"endColumn":18},{"ruleId":"83","severity":1,"message":"98","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":17},{"ruleId":"83","severity":1,"message":"99","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":17},{"ruleId":"83","severity":1,"message":"100","line":15,"column":10,"nodeType":"85","messageId":"86","endLine":15,"endColumn":20},{"ruleId":"83","severity":1,"message":"101","line":20,"column":8,"nodeType":"85","messageId":"86","endLine":20,"endColumn":19},{"ruleId":"83","severity":1,"message":"102","line":26,"column":8,"nodeType":"85","messageId":"86","endLine":26,"endColumn":16},{"ruleId":"83","severity":1,"message":"103","line":28,"column":10,"nodeType":"85","messageId":"86","endLine":28,"endColumn":17},{"ruleId":"83","severity":1,"message":"96","line":34,"column":8,"nodeType":"85","messageId":"86","endLine":34,"endColumn":20},{"ruleId":"83","severity":1,"message":"94","line":35,"column":8,"nodeType":"85","messageId":"86","endLine":35,"endColumn":14},{"ruleId":"83","severity":1,"message":"104","line":37,"column":7,"nodeType":"85","messageId":"86","endLine":37,"endColumn":18},{"ruleId":"83","severity":1,"message":"105","line":123,"column":7,"nodeType":"85","messageId":"86","endLine":123,"endColumn":12},{"ruleId":"83","severity":1,"message":"106","line":131,"column":10,"nodeType":"85","messageId":"86","endLine":131,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":157,"column":6,"nodeType":"109","endLine":157,"endColumn":8,"suggestions":"110"},{"ruleId":"83","severity":1,"message":"84","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":14},{"ruleId":"83","severity":1,"message":"111","line":15,"column":10,"nodeType":"85","messageId":"86","endLine":15,"endColumn":15},{"ruleId":"83","severity":1,"message":"112","line":15,"column":17,"nodeType":"85","messageId":"86","endLine":15,"endColumn":25},{"ruleId":"83","severity":1,"message":"113","line":16,"column":10,"nodeType":"85","messageId":"86","endLine":16,"endColumn":14},{"ruleId":"83","severity":1,"message":"114","line":16,"column":16,"nodeType":"85","messageId":"86","endLine":16,"endColumn":23},{"ruleId":"83","severity":1,"message":"115","line":17,"column":10,"nodeType":"85","messageId":"86","endLine":17,"endColumn":14},{"ruleId":"83","severity":1,"message":"116","line":17,"column":16,"nodeType":"85","messageId":"86","endLine":17,"endColumn":23},{"ruleId":"83","severity":1,"message":"117","line":18,"column":10,"nodeType":"85","messageId":"86","endLine":18,"endColumn":19},{"ruleId":"83","severity":1,"message":"118","line":18,"column":21,"nodeType":"85","messageId":"86","endLine":18,"endColumn":33},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'shadows' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'CardMedia' is defined but never used.","'PropTypes' is defined but never used.","'withStyles' is defined but never used.","'CssBaseline' is defined but never used.","'MenuItem' is defined but never used.","'borders' is defined but never used.","'drawerWidth' is assigned a value but never used.","'card1' is assigned a value but never used.","'author' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getmodules'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'desc' is assigned a value but never used.","'setDesc' is assigned a value but never used.","'link' is assigned a value but never used.","'setLink' is assigned a value but never used.","'isEditing' is assigned a value but never used.","'setIsEditing' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [getmodules]",{"range":"124","text":"125"},[4504,4506],"[getmodules]"]